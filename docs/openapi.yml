openapi: 3.0.0
info:
  title: 'tz api'
  version: 0.0.1
paths:
  /api/categories:
    post:
      tags:
        - Category
      summary: Create category
      operationId: 'createCategory'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategoryRequest'
      responses:
        '200':
          description: 'Ok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryResponse'
        '422':
          description: 'Validation error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Category
      summary: Get List of categories
      operationId: 'getListCategory'
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: 'Ok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryListResponse'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/categories/{id}:
    get:
      tags:
        - Category
      summary: Get Category
      operationId: 'getCategory'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Ok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryResponse'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Category
      summary: Update category
      operationId: 'updateCategorySolution'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCategoryRequest'
      responses:
        '200':
          description: 'Ok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryResponse'
        '422':
          description: 'Validation error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/products:
    post:
      tags:
        - Product
      summary: Create Product
      operationId: 'createProduct'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'
      responses:
        '200':
          description: 'Ok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        '422':
          description: 'Validation error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Product
      summary: Get List of categories
      operationId: 'getListProduct'
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: 'Ok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductListResponse'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/products/{id}:
    get:
      tags:
        - Product
      summary: Get Product
      operationId: 'getProduct'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: category_name
          in: query
          required: false
          schema:
            type: string
        - name: category_id
          in: query
          required: false
          schema:
            type: integer
        - name: price_from
          in: query
          required: false
          schema:
            type: integer
        - name: price_to
          in: query
          required: false
          schema:
            type: string
        - name: is_published
          in: query
          required: false
          schema:
            type: string
            enum: [ yes, no ]
      responses:
        '200':
          description: 'Ok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Product
      summary: Update product
      operationId: 'updateProduct'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductRequest'
      responses:
        '200':
          description: 'Ok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        '422':
          description: 'Validation error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Product
      summary: Delete category
      operationId: 'deleteProduct'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Ok'
          content:
            application/json:
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    ErrorResponse:
      description: 'Error response'
      properties:
        message:
          type: string
        code:
          type: integer

    ValidationErrorResponse:
      description: 'Validation Error Response'
      allOf:
        - type: object
          properties:
            message:
              type: string
            errors:
              type: object

    CreateCategoryRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string

    UpdateCategoryRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
    CategoryResponse:
      allOf:
          - $ref: '#/components/schemas/Category'

    CategoryListResponse:
        type: array
        items:
          $ref: '#/components/schemas/Category'

    Category:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
        name:
          type: string

    CreateProductRequest:
      type: object
      properties:
        name:
          type: string
        price:
          type: number
        categoryIds:
          type: array
          items:
            type: number
        is_published:
          type: boolean
        is_deleted:
          type: boolean

    UpdateProductRequest:
      type: object
      properties:
        name:
          type: string
        price:
          type: number
        categoryIds:
          type: array
          items:
            type: number
        is_published:
          type: boolean
        is_deleted:
          type: boolean

    ProductResponse:
      allOf:
        - $ref: '#/components/schemas/Product'

    ProductListResponse:
      type: array
      items:
        $ref: '#/components/schemas/Product'

    Product:
      type: object
      required:
        - name
        - price
        - is_published
        - is_deleted
      properties:
        name:
          type: string
        price:
          type: number
        is_published:
          type: boolean
        is_deleted:
          type: boolean
